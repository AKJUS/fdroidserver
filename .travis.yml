
# Use the Android base system since it provides the SDK, etc.
language: java

matrix:
  include:
    - os: linux
      language: android
    - os: osx
      osx_image: xcode9
      env: ANDROID_SDK_ROOT=/usr/local/share/android-sdk
      env: ANDROID_HOME=/usr/local/share/android-sdk
    - os: osx
      osx_image: xcode7.3
      env: ANDROID_SDK_ROOT=/usr/local/share/android-sdk
      env: ANDROID_HOME=/usr/local/share/android-sdk
    - os: osx
      osx_image: xcode6.4
      env: ANDROID_SDK_ROOT=/usr/local/share/android-sdk
      env: ANDROID_HOME=/usr/local/share/android-sdk

addons:
  apt:
    sources:
      - sourceline: 'ppa:fdroid/fdroidserver'
    packages:
    - bash
    - dash
    - pylint
    - pep8
    - python3-dev
    - python3-pip
    - python3-ruamel.yaml
    - python3-setuptools
    - python3.4-venv
    - libjpeg-dev
    - zlib1g-dev
    - fdroidserver

android:
  components:
    - android-23  # required for `fdroid build` test
    - build-tools-25.0.3  # required for `fdroid build` test
  licenses:
    - 'android-sdk-preview-.+'
    - 'android-sdk-license-.+'

# the PPA is needed on Ubuntu 14.04 precise, and with python3, trusty too
# the pip thing is a hack that can go away with trusty
install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update > /dev/null;
      brew install dash bash python3 gradle jenv;
      brew install gnu-sed --with-default-names;
      brew cask reinstall java;
      brew cask install android-sdk;

      mkdir -p "$ANDROID_HOME/licenses";
      echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license";
      echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license";
      echo y | $ANDROID_HOME/tools/bin/sdkmanager "platform-tools";
      echo y | $ANDROID_HOME/tools/bin/sdkmanager "build-tools;25.0.2";
      echo y | $ANDROID_HOME/tools/bin/sdkmanager "platforms;android-23";

      sudo pip3 install -e  .;
      sudo rm -rf fdroidserver.egg-info;

      echo $PATH;
      echo $JAVA_HOME;
      jenv versions;
      /usr/libexec/java_home;
      java -version;
      which java;
      javac -version;
      which javac;
      jarsigner -help;
      which jarsigner;
      keytool -help;
      which keytool;
    fi

script:
  - cd tests
  - ./complete-ci-tests

after_failure:
  - cd $TRAVIS_BUILD_DIR
  - ls -lR | curl -F 'clbin=<-' https://clbin.com
